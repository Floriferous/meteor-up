{"version":3,"sources":["../../src/__tests__/plugin-api.unit.js"],"names":["describe","api","base","path","join","__dirname","filteredArgs","program","verbose","beforeEach","PluginAPI","it","_api","config","configPath","to","include","equal","has","property","resolvePath","be","a","runTaskList","getDockerLogs","runSSHCommand","getArgs","getBasePath","getVerbose","getOptions","fsStub","configStub","sinon","stub","fs","callsFake","toString","meteor","afterEach","restore","hasMeteorPackage","errors","depreciations","validatorStub","totalConsoleOutput","consoleStub","validate","returns","console","text","validateConfig","contain","expected","app","type","docker","image","imagePort","stopAppDuringPrepareBundle","result","_normalizeConfig","deep","newConfig","servers","two","setConfig","getConfig","commandCalled","preHookCalled","postHookCalled","hooks","method","commands","handler","after","cb","runCommand","catch","then","e","log","commandHistory","name","sessions","getSessions","have","length","_loadSessions","keys","_pickSessions"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1B,MAAIC,GAAJ;;AACA,QAAMC,IAAI,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,yCAArB,CAAb;;AACA,QAAMC,YAAY,GAAG,CAAC,QAAD,CAArB;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE;AADK,GAAhB;AAIAC,EAAAA,UAAU,CAAC,MAAM;AACfR,IAAAA,GAAG,GAAG,IAAIS,kBAAJ,CAAcR,IAAd,EAAoBI,YAApB,EAAkCC,OAAlC,CAAN;AACD,GAFS,CAAV;AAIAP,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BW,IAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,YAAMC,IAAI,GAAG,IAAIF,kBAAJ,CAAcR,IAAd,EAAoBI,YAApB,EAAkC;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAlC,CAAb;;AAEA,wBAAOD,IAAI,CAACE,UAAZ,EAAwBC,EAAxB,CAA2BC,OAA3B,CAAmC,UAAnC;AACD,KAJC,CAAF;AAMAL,IAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClC,wBAAOV,GAAG,CAACa,UAAX,EAAuBC,EAAvB,CAA0BE,KAA1B,CAAgCd,cAAKC,IAAL,CAAUF,IAAV,EAAgB,QAAhB,CAAhC;AACD,KAFC,CAAF;AAGD,GAVO,CAAR;AAYAF,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBW,IAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AACpC,YAAMC,IAAI,GAAG,IAAIF,kBAAJ,CAAcR,IAAd,EAAoBI,YAApB,EAAkC;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAlC,CAAb;;AAEA,wBAAOD,IAAI,CAACV,IAAZ,EAAkBa,EAAlB,CAAqBE,KAArB,CAA2B,oBAA3B;AACD,KAJC,CAAF;AAMAN,IAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,wBAAOV,GAAG,CAACC,IAAX,EAAiBa,EAAjB,CAAoBE,KAApB,CAA0Bf,IAA1B;AACD,KAFC,CAAF;AAGD,GAVO,CAAR;AAYAF,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BW,IAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChC,wBAAOV,GAAP,EAAYiB,GAAZ,CAAgBC,QAAhB,CAAyB,SAAzB;AACD,KAFC,CAAF;AAGAR,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvC,wBAAOV,GAAP,EAAYiB,GAAZ,CAAgBC,QAAhB,CAAyB,gBAAzB;AACD,KAFC,CAAF;AAGD,GAPO,CAAR;AAQAnB,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBW,IAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClC,wBAAOV,GAAG,CAACmB,WAAX,EAAwBL,EAAxB,CAA2BM,EAA3B,CAA8BC,CAA9B,CAAgC,UAAhC;AACD,KAFC,CAAF;AAGAX,IAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClC,wBAAOV,GAAG,CAACsB,WAAX,EAAwBR,EAAxB,CAA2BM,EAA3B,CAA8BC,CAA9B,CAAgC,UAAhC;AACD,KAFC,CAAF;AAGAX,IAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AACpC,wBAAOV,GAAG,CAACuB,aAAX,EAA0BT,EAA1B,CAA6BM,EAA7B,CAAgCC,CAAhC,CAAkC,UAAlC;AACD,KAFC,CAAF;AAGAX,IAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AACpC,wBAAOV,GAAG,CAACwB,aAAX,EAA0BV,EAA1B,CAA6BM,EAA7B,CAAgCC,CAAhC,CAAkC,UAAlC;AACD,KAFC,CAAF;AAGD,GAbO,CAAR;AAcAtB,EAAAA,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBW,IAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7B,wBAAOV,GAAG,CAACyB,OAAJ,EAAP,EAAsBX,EAAtB,CAAyBE,KAAzB,CAA+BX,YAA/B;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAMAN,EAAAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BW,IAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7B,wBAAOV,GAAG,CAAC0B,WAAJ,EAAP,EAA0BZ,EAA1B,CAA6BE,KAA7B,CAAmCf,IAAnC;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAMAF,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BW,IAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChC,wBAAOV,GAAG,CAAC2B,UAAJ,EAAP,EAAyBb,EAAzB,CAA4BE,KAA5B,CAAkC,IAAlC;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAMAjB,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BW,IAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChC,wBAAOV,GAAG,CAAC4B,UAAJ,EAAP,EAAyBd,EAAzB,CAA4BE,KAA5B,CAAkCV,OAAlC;AACD,KAFC,CAAF;AAGD,GAJO,CAAR;AAMAP,EAAAA,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjC,QAAI8B,MAAJ;AACA,QAAIC,UAAJ;AAEAtB,IAAAA,UAAU,CAAC,MAAM;AACfqB,MAAAA,MAAM,GAAGE,eAAMC,IAAN,CAAWC,WAAX,EAAe,cAAf,EAA+BC,SAA/B,CAAyC,OAAO;AACvDC,QAAAA,QAAQ,GAAG;AACT,iBAAQ;;;;aAAR;AAKD;;AAPsD,OAAP,CAAzC,CAAT;AAUAL,MAAAA,UAAU,GAAGC,eAAMC,IAAN,CAAWhC,GAAX,EAAgB,WAAhB,EAA6BkC,SAA7B,CAAuC,OAAO;AACzDE,QAAAA,MAAM,EAAE;AACNlC,UAAAA,IAAI,EAAE;AADA;AADiD,OAAP,CAAvC,CAAb;AAKD,KAhBS,CAAV;AAkBAmC,IAAAA,SAAS,CAAC,MAAM;AACdR,MAAAA,MAAM,CAACS,OAAP;AACAR,MAAAA,UAAU,CAACQ,OAAX;AACD,KAHQ,CAAT;AAKA5B,IAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAChD,wBAAOV,GAAG,CAACuC,gBAAJ,CAAqB,UAArB,CAAP,EAAyCzB,EAAzC,CAA4CE,KAA5C,CAAkD,IAAlD;AACD,KAFC,CAAF;AAIAN,IAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5C,wBAAOV,GAAG,CAACuC,gBAAJ,CAAqB,UAArB,CAAP,EAAyCzB,EAAzC,CAA4CE,KAA5C,CAAkD,KAAlD;AACD,KAFC,CAAF;AAIAN,IAAAA,EAAE,CAAC,2CAAD,EAA8C,MAAM;AACpDmB,MAAAA,MAAM,CAACS,OAAP;AACA,wBAAOtC,GAAG,CAACuC,gBAAJ,CAAqB,UAArB,CAAP,EAAyCzB,EAAzC,CAA4CE,KAA5C,CAAkD,KAAlD;AACD,KAHC,CAAF;AAID,GAvCO,CAAR;AAyCAjB,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/B,UAAMyC,MAAM,GAAG;AAAEA,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,CAAV;AAAgCC,MAAAA,aAAa,EAAE;AAA/C,KAAf;AACA,QAAIC,aAAJ;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,WAAJ;AAEApC,IAAAA,UAAU,CAAC,MAAM;AACfmC,MAAAA,kBAAkB,GAAG,EAArB;AACAD,MAAAA,aAAa,GAAGX,eAAMC,IAAN,CAAWa,QAAX,EAAqB,SAArB,EAAgCC,OAAhC,CAAwCN,MAAxC,CAAhB;AACAI,MAAAA,WAAW,GAAGb,eAAMC,IAAN,CAAWe,OAAX,EAAoB,KAApB,EAA2Bb,SAA3B,CAAqC,CAAC,GAAGc,IAAJ,KAAa;AAC9DL,QAAAA,kBAAkB,IAAIK,IAAI,CAAC7C,IAAL,CAAU,GAAV,CAAtB;AACD,OAFa,CAAd;AAGD,KANS,CAAV;AAQAkC,IAAAA,SAAS,CAAC,MAAM;AACdK,MAAAA,aAAa,CAACJ,OAAd;AACAM,MAAAA,WAAW,CAACN,OAAZ;AACD,KAHQ,CAAT;AAKA5B,IAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxCV,MAAAA,GAAG,CAACiD,cAAJ,CAAmBjD,GAAG,CAACa,UAAvB;AACA+B,MAAAA,WAAW,CAACN,OAAZ;AAEA,wBAAOK,kBAAP,EAA2B7B,EAA3B,CAA8BoC,OAA9B,CAAsC,UAAtC;AACA,wBAAOP,kBAAP,EAA2B7B,EAA3B,CAA8BoC,OAA9B,CAAsC,UAAtC;AACD,KANC,CAAF;AAQAxC,IAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM;AACnD8B,MAAAA,MAAM,CAACA,MAAP,GAAgB,EAAhB;AACAA,MAAAA,MAAM,CAACC,aAAP,GAAuB,EAAvB;AAEAzC,MAAAA,GAAG,CAACiD,cAAJ,CAAmBjD,GAAG,CAACa,UAAvB;AAEA,wBAAO8B,kBAAP,EAA2B7B,EAA3B,CAA8BE,KAA9B,CAAoC,EAApC;AACD,KAPC,CAAF;AAQD,GAnCO,CAAR;AAqCAjB,EAAAA,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCW,IAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AAC3C,YAAMyC,QAAQ,GAAG;AAAEf,QAAAA,MAAM,EAAE;AAAElC,UAAAA,IAAI,EAAE;AAAR,SAAV;AAA2BkD,QAAAA,GAAG,EAAE;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBnD,UAAAA,IAAI,EAAE,KAAxB;AAA+BoD,UAAAA,MAAM,EAAE;AAAEC,YAAAA,KAAK,EAAE,kBAAT;AAA6BC,YAAAA,SAAS,EAAE,IAAxC;AAA8CC,YAAAA,0BAA0B,EAAE;AAA1E;AAAvC;AAAhC,OAAjB;AACA,YAAM7C,MAAM,GAAG;AAAEwB,QAAAA,MAAM,EAAE;AAAElC,UAAAA,IAAI,EAAE;AAAR;AAAV,OAAf;;AACA,YAAMwD,MAAM,GAAG1D,GAAG,CAAC2D,gBAAJ,CAAqB/C,MAArB,CAAf;;AAEA,wBAAO8C,MAAP,EAAe5C,EAAf,CAAkB8C,IAAlB,CAAuB5C,KAAvB,CAA6BmC,QAA7B;AACD,KANC,CAAF;AAOD,GARO,CAAR;AAUApD,EAAAA,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BW,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvC,YAAMmD,SAAS,GAAG;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAAX,OAAlB;AAEA/D,MAAAA,GAAG,CAACgE,SAAJ,CAAcH,SAAd;AAEA,wBAAO7D,GAAG,CAACiE,SAAJ,EAAP,EAAwBnD,EAAxB,CAA2B8C,IAA3B,CAAgC5C,KAAhC,CAAsC6C,SAAtC;AACD,KANC,CAAF;AAOD,GARO,CAAR;AAUA9D,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3B,QAAImE,aAAa,GAAG,KAApB;AACA,QAAIC,aAAa,GAAG,KAApB;AACA,QAAIC,cAAc,GAAG,KAArB;AAEA5D,IAAAA,UAAU,CAAC,MAAM;AACf6D,mBAAM,eAAN,IAAyB,CAAC;AACxBC,QAAAA,MAAM,GAAG;AACPH,UAAAA,aAAa,GAAG,IAAhB;AACD;;AAHuB,OAAD,CAAzB;AAKAE,mBAAM,gBAAN,IAA0B,CAAC;AACzBC,QAAAA,MAAM,GAAG;AACPF,UAAAA,cAAc,GAAG,IAAjB;AACD;;AAHwB,OAAD,CAA1B;AAMAG,yBAAS,WAAT,IAAwB;AACtBC,QAAAA,OAAO,GAAG;AACRN,UAAAA,aAAa,GAAG,IAAhB;AACD;;AAHqB,OAAxB;AAMAA,MAAAA,aAAa,GAAG,KAAhB;AACAC,MAAAA,aAAa,GAAG,KAAhB;AACAC,MAAAA,cAAc,GAAG,KAAjB;AACD,KArBS,CAAV;AAuBAK,IAAAA,KAAK,CAAC,MAAM;AACV,aAAOJ,aAAM,eAAN,CAAP;AACA,aAAOA,aAAM,gBAAN,CAAP;AACA,aAAOE,mBAAS,WAAT,CAAP;AACD,KAJI,CAAL;AAMA7D,IAAAA,EAAE,CAAC,sCAAD,EAAyCgE,EAAE,IAAI;AAC/C1E,MAAAA,GAAG,CAAC2E,UAAJ,GAAiBC,KAAjB,CAAuB,MAAM;AAC3BF,QAAAA,EAAE;AACH,OAFD;AAGD,KAJC,CAAF;AAMAhE,IAAAA,EAAE,CAAC,iCAAD,EAAoCgE,EAAE,IAAI;AAC1C1E,MAAAA,GAAG,CAAC2E,UAAJ,CAAe,qBAAf,EAAsCC,KAAtC,CAA4C,MAAM;AAChDF,QAAAA,EAAE;AACH,OAFD;AAGD,KAJC,CAAF;AAMAhE,IAAAA,EAAE,CAAC,oBAAD,EAAuBgE,EAAE,IAAI;AAC7B1E,MAAAA,GAAG,CAAC2E,UAAJ,CAAe,WAAf,EAA4BE,IAA5B,CAAiC,MAAM;AACrC,0BAAOX,aAAP,EAAsBpD,EAAtB,CAAyBE,KAAzB,CAA+B,IAA/B;AACA0D,QAAAA,EAAE;AACH,OAHD;AAID,KALC,CAAF;AAOAhE,IAAAA,EAAE,CAAC,kBAAD,EAAqBgE,EAAE,IAAI;AAC3B1E,MAAAA,GAAG,CAAC2E,UAAJ,CAAe,WAAf,EAA4BE,IAA5B,CAAiC,MAAM;AACrC,0BAAOV,aAAP,EAAsBrD,EAAtB,CAAyBE,KAAzB,CAA+B,IAA/B;AACA,0BAAOoD,cAAP,EAAuBtD,EAAvB,CAA0BE,KAA1B,CAAgC,IAAhC;AACA0D,QAAAA,EAAE;AACH,OAJD,EAKGE,KALH,CAKSE,CAAC,IAAI;AACV/B,QAAAA,OAAO,CAACgC,GAAR,CAAYD,CAAZ;AACD,OAPH;AAQD,KATC,CAAF;AAWApE,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCV,MAAAA,GAAG,CAAC2E,UAAJ,CAAe,WAAf;AACA,wBAAO3E,GAAG,CAACgF,cAAX,EAA2BlE,EAA3B,CAA8B8C,IAA9B,CAAmC5C,KAAnC,CAAyC,CAAC;AAACiE,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAzC;AACD,KAHC,CAAF;AAID,GApEO,CAAR;AAsEAlF,EAAAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BW,IAAAA,EAAE,CAAC,oCAAD,EAAuC,MAAM;AAC7C,YAAMwE,QAAQ,GAAGlF,GAAG,CAACmF,WAAJ,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAAjB;AAEA,wBAAOD,QAAP,EAAiBpE,EAAjB,CAAoBsE,IAApB,CAAyBC,MAAzB,CAAgC,CAAhC;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAtF,EAAAA,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BW,IAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC/CV,MAAAA,GAAG,CAACsF,aAAJ;;AACA,wBAAOtF,GAAG,CAACkF,QAAX,EAAqBpE,EAArB,CAAwBsE,IAAxB,CAA6BG,IAA7B,CAAkC,KAAlC,EAAyC,KAAzC;AACD,KAHC,CAAF;AAID,GALO,CAAR;AAOAxF,EAAAA,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BW,IAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AACjD,YAAMgD,MAAM,GAAG1D,GAAG,CAACwF,aAAJ,CAAkB,CAAC,QAAD,EAAW,OAAX,CAAlB,CAAf;;AAEA,wBAAO9B,MAAP,EAAe5C,EAAf,CAAkBsE,IAAlB,CAAuBG,IAAvB,CAA4B,KAA5B,EAAmC,KAAnC;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAOD,CAhRO,CAAR","sourcesContent":["import * as validate from '../validate';\nimport { commands } from '../commands';\nimport { expect } from 'chai';\nimport fs from 'fs';\nimport { hooks } from '../hooks';\nimport path from 'path';\nimport PluginAPI from '../plugin-api';\nimport sinon from 'sinon';\n\ndescribe('PluginAPI', () => {\n  let api;\n  const base = path.join(__dirname, '../../tests/fixtures/project-unit-tests');\n  const filteredArgs = ['--tail'];\n  const program = {\n    verbose: true\n  };\n\n  beforeEach(() => {\n    api = new PluginAPI(base, filteredArgs, program);\n  });\n\n  describe('configPath', () => {\n    it('should prefer --config option', () => {\n      const _api = new PluginAPI(base, filteredArgs, { config: '~/project2/.deploy/mup.js' });\n\n      expect(_api.configPath).to.include('project2');\n    });\n\n    it('should fallback to base', () => {\n      expect(api.configPath).to.equal(path.join(base, 'mup.js'));\n    });\n  });\n\n  describe('base', () => {\n    it('should prefer config path', () => {\n      const _api = new PluginAPI(base, filteredArgs, { config: '~/project2/.deploy/mup.js' });\n\n      expect(_api.base).to.equal('~/project2/.deploy');\n    });\n\n    it('should fallback to given base', () => {\n      expect(api.base).to.equal(base);\n    });\n  });\n\n  describe('properties', () => {\n    it('should have \"program\"', () => {\n      expect(api).has.property('program');\n    });\n    it('should have \"commandHistory\"', () => {\n      expect(api).has.property('commandHistory');\n    });\n  });\n  describe('utils', () => {\n    it('should have resolvePath', () => {\n      expect(api.resolvePath).to.be.a('function');\n    });\n    it('should have runTaskList', () => {\n      expect(api.runTaskList).to.be.a('function');\n    });\n    it('should have getDockerLogs', () => {\n      expect(api.getDockerLogs).to.be.a('function');\n    });\n    it('should have runSSHCommand', () => {\n      expect(api.runSSHCommand).to.be.a('function');\n    });\n  });\n  describe('getArgs', () => {\n    it('should return args', () => {\n      expect(api.getArgs()).to.equal(filteredArgs);\n    });\n  });\n\n  describe('getBasePath', () => {\n    it('should return base', () => {\n      expect(api.getBasePath()).to.equal(base);\n    });\n  });\n\n  describe('getVerbose', () => {\n    it('should return verbose', () => {\n      expect(api.getVerbose()).to.equal(true);\n    });\n  });\n\n  describe('getOptions', () => {\n    it('should return options', () => {\n      expect(api.getOptions()).to.equal(program);\n    });\n  });\n\n  describe('hasMeteorPackage', () => {\n    let fsStub;\n    let configStub;\n\n    beforeEach(() => {\n      fsStub = sinon.stub(fs, 'readFileSync').callsFake(() => ({\n        toString() {\n          return `\n            package1@3\n            package2@3\n            #package3@3\n            `;\n        }\n      }));\n\n      configStub = sinon.stub(api, 'getConfig').callsFake(() => ({\n        meteor: {\n          path: '../'\n        }\n      }));\n    });\n\n    afterEach(() => {\n      fsStub.restore();\n      configStub.restore();\n    });\n\n    it('should return true if package is used', () => {\n      expect(api.hasMeteorPackage('package2')).to.equal(true);\n    });\n\n    it('should ignore commented out lines', () => {\n      expect(api.hasMeteorPackage('package3')).to.equal(false);\n    });\n\n    it('should return false if could not find app', () => {\n      fsStub.restore();\n      expect(api.hasMeteorPackage('package2')).to.equal(false);\n    });\n  });\n\n  describe('validateConfig', () => {\n    const errors = { errors: ['error1', 'error2'], depreciations: [] };\n    let validatorStub;\n    let totalConsoleOutput = '';\n    let consoleStub;\n\n    beforeEach(() => {\n      totalConsoleOutput = '';\n      validatorStub = sinon.stub(validate, 'default').returns(errors);\n      consoleStub = sinon.stub(console, 'log').callsFake((...text) => {\n        totalConsoleOutput += text.join(' ');\n      });\n    });\n\n    afterEach(() => {\n      validatorStub.restore();\n      consoleStub.restore();\n    });\n\n    it('should show validation errors', () => {\n      api.validateConfig(api.configPath);\n      consoleStub.restore();\n\n      expect(totalConsoleOutput).to.contain('- error1');\n      expect(totalConsoleOutput).to.contain('- error2');\n    });\n\n    it('should show nothing when config is valid', () => {\n      errors.errors = [];\n      errors.depreciations = [];\n\n      api.validateConfig(api.configPath);\n\n      expect(totalConsoleOutput).to.equal('');\n    });\n  });\n\n  describe('_normalizeConfig', () => {\n    it('should copy meteor object to app', () => {\n      const expected = { meteor: { path: '../' }, app: { type: 'meteor', path: '../', docker: { image: 'kadirahq/meteord', imagePort: 3000, stopAppDuringPrepareBundle: true } } };\n      const config = { meteor: { path: '../' } };\n      const result = api._normalizeConfig(config);\n\n      expect(result).to.deep.equal(expected);\n    });\n  });\n\n  describe('setConfig', () => {\n    it('should update the old config', () => {\n      const newConfig = { servers: { two: 0 } };\n\n      api.setConfig(newConfig);\n\n      expect(api.getConfig()).to.deep.equal(newConfig);\n    });\n  });\n\n  describe('runCommand', () => {\n    let commandCalled = false;\n    let preHookCalled = false;\n    let postHookCalled = false;\n\n    beforeEach(() => {\n      hooks['pre.test.logs'] = [{\n        method() {\n          preHookCalled = true;\n        }\n      }];\n      hooks['post.test.logs'] = [{\n        method() {\n          postHookCalled = true;\n        }\n      }];\n\n      commands['test.logs'] = {\n        handler() {\n          commandCalled = true;\n        }\n      };\n\n      commandCalled = false;\n      preHookCalled = false;\n      postHookCalled = false;\n    });\n\n    after(() => {\n      delete hooks['pre.test.logs'];\n      delete hooks['post.test.logs'];\n      delete commands['test.logs'];\n    });\n\n    it('should throw if name is not provided', cb => {\n      api.runCommand().catch(() => {\n        cb();\n      });\n    });\n\n    it('should throw if unknown command', cb => {\n      api.runCommand('nonexistent.command').catch(() => {\n        cb();\n      });\n    });\n\n    it('should run command', cb => {\n      api.runCommand('test.logs').then(() => {\n        expect(commandCalled).to.equal(true);\n        cb();\n      });\n    });\n\n    it('should run hooks', cb => {\n      api.runCommand('test.logs').then(() => {\n        expect(preHookCalled).to.equal(true);\n        expect(postHookCalled).to.equal(true);\n        cb();\n      })\n        .catch(e => {\n          console.log(e);\n        });\n    });\n\n    it('should update commandHistory', () => {\n      api.runCommand('test.logs');\n      expect(api.commandHistory).to.deep.equal([{name: 'test.logs'}]);\n    });\n  });\n\n  describe('getSessions', () => {\n    it('should return sessions for plugins', () => {\n      const sessions = api.getSessions(['meteor', 'mongo']);\n\n      expect(sessions).to.have.length(2);\n    });\n  });\n\n  describe('_loadSessions', () => {\n    it('should add sessions to this.sessions', () => {\n      api._loadSessions();\n      expect(api.sessions).to.have.keys('one', 'two');\n    });\n  });\n\n  describe('_pickSessions', () => {\n    it('should return sessions for each plugin', () => {\n      const result = api._pickSessions(['meteor', 'mongo']);\n\n      expect(result).to.have.keys('one', 'two');\n    });\n  });\n});\n"],"file":"plugin-api.unit.js"}