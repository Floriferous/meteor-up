{"version":3,"sources":["../../src/__tests__/commands.unit.js"],"names":["describe","beforeEach","prop","Object","keys","commands","it","handler","spy","sinon","console","afterEach","restore","target","called"],"mappings":";;AAAA;;AACA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBC,EAAAA,UAAU,CAAC,MAAM;AACf,SAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAYC,kBAAZ,CAAnB,EAA0C;AACxC,aAAOA,mBAASH,IAAT,CAAP;AACD;AACF,GAJS,CAAV;AAMAF,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BM,IAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AACjD,eAASC,OAAT,GAAmB,CAAE;;AACrB,6BAAgB,QAAhB,EAA0B,OAA1B,EAAmCA,OAAnC;AACA,2BAAOF,mBAAS,cAAT,MAA6BE,OAApC;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAP,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACzC,QAAIQ,GAAJ;AACAP,IAAAA,UAAU,CAAC,MAAM;AACfO,MAAAA,GAAG,GAAGC,eAAMD,GAAN,CAAUE,OAAV,EAAmB,KAAnB,CAAN;AACD,KAFS,CAAV;AAGAC,IAAAA,SAAS,CAAC,MAAM;AACdH,MAAAA,GAAG,CAACI,OAAJ;AACD,KAFQ,CAAT;AAIAN,IAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAClD,eAASO,MAAT,GAAkB,CAAE;;AACpBR,yBAAS,qBAAT,IAAkCQ,MAAlC;AACA,8CAAyB,QAAzB,EAAmC;AACjC,wBAAgB;AADiB,OAAnC;AAGA,2BAAOR,mBAAS,cAAT,MAA6BQ,MAApC;AACD,KAPC,CAAF;AAQAP,IAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AACjD,eAASO,MAAT,GAAkB,CAAE;;AACpBR,yBAAS,qBAAT,IAAkCQ,MAAlC;AAEA,8CAAyB,QAAzB,EAAmC;AACjC,wBAAgB;AADiB,OAAnC;AAGA,2BAAOR,mBAAS,cAAT,MAA6BQ,MAApC;AACD,KARC,CAAF;AASAP,IAAAA,EAAE,CAAC,kDAAD,EAAqD,MAAM;AAC3D,8CAAyB,QAAzB,EAAmC;AACjC,wBAAgB;AADiB,OAAnC;AAGA,2BAAOE,GAAG,CAACM,MAAX;AACD,KALC,CAAF;AAMD,GAhCO,CAAR;AAiCD,CAhDO,CAAR","sourcesContent":["import registerCommand, { commands, registerCommandOverrides } from '../commands';\nimport assert from 'assert';\nimport sinon from 'sinon';\n\ndescribe('commands', () => {\n  beforeEach(() => {\n    for (const prop of Object.keys(commands)) {\n      delete commands[prop];\n    }\n  });\n\n  describe('registerCommad', () => {\n    it('should add command to list of commands', () => {\n      function handler() {}\n      registerCommand('docker', 'setup', handler);\n      assert(commands['docker.setup'] === handler);\n    });\n  });\n\n  describe('registerCommandOverrides', () => {\n    let spy;\n    beforeEach(() => {\n      spy = sinon.spy(console, 'log');\n    });\n    afterEach(() => {\n      spy.restore();\n    });\n\n    it('should add override to list of commands', () => {\n      function target() {}\n      commands['plugin.docker-setup'] = target;\n      registerCommandOverrides('plugin', {\n        'docker.setup': 'plugin.docker-setup'\n      });\n      assert(commands['docker.setup'] === target);\n    });\n    it('should support shorter override format', () => {\n      function target() {}\n      commands['plugin.docker-setup'] = target;\n\n      registerCommandOverrides('plugin', {\n        'docker.setup': 'docker-setup'\n      });\n      assert(commands['docker.setup'] === target);\n    });\n    it('should warn when override handler doesn\\'t exist', () => {\n      registerCommandOverrides('plugin', {\n        'docker.setup': 'docker-setup'\n      });\n      assert(spy.called);\n    });\n  });\n});\n"],"file":"commands.unit.js"}