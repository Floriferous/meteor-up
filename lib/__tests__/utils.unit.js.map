{"version":3,"sources":["../../src/__tests__/utils.unit.js"],"names":["describe","it","list","nodemiral","taskList","executeScript","utils","addStdioHandlers","cb","run","sessions","opts","runCb","runTaskList","then","_taskQueue","verbose","to","equal","undefined","copy","error","catch","needle","haystack","count","countOccurences","result","resolvePath","expected","path","resolve","indexOf","createOption","argvContains","argv","_","config","tail","argvArray","unwanted","filterArgv","deep","follow"],"mappings":"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","sourcesContent":["import * as utils from '../utils';\nimport assert from 'assert';\nimport { expect } from 'chai';\nimport nodemiral from '@zodern/nodemiral';\nimport path from 'path';\n\ndescribe('utils', () => {\n  describe('addStdioHandlers', () => {\n    it('should add stdio handlers to nodemiral task list', () => {\n      const list = nodemiral.taskList('Test');\n      list.executeScript('testing', {});\n      // Test that it doesn't throw an error\n      utils.addStdioHandlers(list);\n    });\n  });\n\n  describe('runTaskList', () => {\n    it('should resolve when list is sucessfull', cb => {\n      const list = {\n        run(sessions, opts, runCb) {\n          runCb({});\n        }\n      };\n      utils.runTaskList(list, {}, {}).then(() => {\n        cb();\n      });\n    });\n\n    it('should add stdio handlers for verbose', cb => {\n      const list = {\n        _taskQueue: [],\n        run(sessions, opts, runCb) {\n          expect(opts.verbose).to.equal(undefined);\n          runCb({});\n        }\n      };\n\n      utils.runTaskList(list, {}, { verbose: true })\n        .then(() => { cb(); });\n    });\n\n    it('should reject if a task failed', cb => {\n      const list = {\n        run(sessions, opts, runCb) {\n          runCb({\n            copy: {\n              error: 'error'\n            }\n          });\n        }\n      };\n\n      utils.runTaskList(list, {}, {}).catch(() => {\n        cb();\n      });\n    });\n  });\n\n  describe('countOccurences', () => {\n    it('should return the correct count', () => {\n      const needle = 'Meteor';\n      const haystack = 'Production Quality Meteor Deployments. Meteor Up is a command line tool that allows you to deploy any Meteor app to your own server.';\n      const count = utils.countOccurences(needle, haystack);\n      assert(count === 3);\n    });\n  });\n\n  describe('resolvePath', () => {\n    it('should return the correct path', () => {\n      const result = utils.resolvePath('/root', '../opt');\n      const expected = path.resolve('/root', '../opt');\n      assert(result === expected);\n    });\n    it('should expand tilde', () => {\n      const result = utils.resolvePath('~/.ssh');\n      assert(result.indexOf('~') === -1);\n    });\n  });\n\n  describe('createOption', () => {\n    it('should handle long options', () => {\n      const result = utils.createOption('option');\n\n      assert(result === '--option');\n    });\n    it('should handle short options', () => {\n      const result = utils.createOption('o');\n\n      assert(result === '-o');\n    });\n  });\n\n  describe('argvContains', () => {\n    it('should find exact matches', () => {\n      const result = utils.argvContains(['a', 'b'], 'a');\n\n      assert(result);\n    });\n    it('should find matches that contain the value', () => {\n      const result = utils.argvContains(['a', 'b=c'], 'b');\n\n      assert(result);\n    });\n    it('should return false if not found', () => {\n      const result = utils.argvContains(['a', 'b'], 'c');\n\n      assert(!result);\n    });\n  });\n\n  describe('filterArgv', () => {\n    it('should remove unwanted options', () => {\n      const argv = { _: ['logs'], config: './mup.js', tail: true };\n      const argvArray = ['mup', 'logs', '--config=./mup.js', '--tail'];\n      const unwanted = ['_', 'config'];\n      const result = utils.filterArgv(argvArray, argv, unwanted);\n\n      expect(result).to.deep.equal(['logs', '--tail']);\n    });\n    it('should remove undefined and false options', () => {\n      const argv = { _: ['logs'], config: undefined, verbose: true, follow: false };\n      const argvArray = ['mup', 'logs', '--verbose'];\n      const unwanted = ['_'];\n\n      const result = utils.filterArgv(argvArray, argv, unwanted);\n\n      expect(result).to.deep.equal(['logs', '--verbose']);\n    });\n    it('should add non-boolean values', () => {\n      const argv = { _: ['logs'], tail: '10', follow: true };\n      const argvArray = ['mup', 'logs', '--tail=10', '--follow'];\n      const unwanted = ['_'];\n\n      const result = utils.filterArgv(argvArray, argv, unwanted);\n\n      expect(result).to.deep.equal(['logs', '--tail', '10', '--follow']);\n    });\n    it('should remove options not provided by user', () => {\n      const argv = { _: ['logs'], follow: true, tail: '10' };\n      const argvArray = ['mup', 'logs'];\n      const unwanted = ['_'];\n\n      const result = utils.filterArgv(argvArray, argv, unwanted);\n\n      expect(result).to.deep.equal(['logs']);\n    });\n  });\n});\n"],"file":"utils.unit.js"}