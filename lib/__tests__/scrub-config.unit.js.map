{"version":3,"sources":["../../src/__tests__/scrub-config.unit.js"],"names":["describe","beforeEach","_configScrubbers","length","it","scrubber","to","equal","config","scrubUtils","be","an","utils","ran","result","not","deep","url","expected","scrubUrl"],"mappings":";;AAAA;;AACA;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BC,EAAAA,UAAU,CAAC,MAAM;AACfC,kCAAiBC,MAAjB,GAA0B,CAA1B;AACD,GAFS,CAAV;AAIAC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AACpC,UAAMC,QAAQ,GAAG,YAAW,CAAG,CAA/B;;AAEA,uCAAiBA,QAAjB;AACA,sBAAOH,8BAAiB,CAAjB,CAAP,EAA4BI,EAA5B,CAA+BC,KAA/B,CAAqCF,QAArC;AACD,GALC,CAAF;AAOAD,EAAAA,EAAE,CAAC,sBAAD,EAAyB,MAAM;AAC/B,UAAMC,QAAQ,GAAG,UAASG,MAAT,EAAiBC,UAAjB,EAA6B;AAC5C,wBAAOD,MAAP,EAAeF,EAAf,CAAkBI,EAAlB,CAAqBC,EAArB,CAAwB,QAAxB;AACA,wBAAOF,UAAP,EAAmBH,EAAnB,CAAsBC,KAAtB,CAA4BK,kBAA5B;AAEAJ,MAAAA,MAAM,CAACK,GAAP,GAAa,IAAb;AAEA,aAAOL,MAAP;AACD,KAPD;;AASA,uCAAiBH,QAAjB;AACA,UAAMG,MAAM,GAAG;AAAEK,MAAAA,GAAG,EAAE;AAAP,KAAf;AACA,UAAMC,MAAM,GAAG,8BAAYN,MAAZ,CAAf;AACA,sBAAOM,MAAP,EAAeR,EAAf,CAAkBS,GAAlB,CAAsBR,KAAtB,CAA4BC,MAA5B;AACA,sBAAOM,MAAP,EAAeR,EAAf,CAAkBU,IAAlB,CAAuBT,KAAvB,CAA6B;AAAEM,MAAAA,GAAG,EAAE;AAAP,KAA7B;AACD,GAfC,CAAF;AAgBAb,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BI,IAAAA,EAAE,CAAC,+CAAD,EAAkD,MAAM;AACxD,YAAMa,GAAG,GAAG,uBAAZ;AACA,YAAMC,QAAQ,GAAG,kBAAjB;AAEA,wBAAON,mBAAMO,QAAN,CAAeF,GAAf,CAAP,EAA4BX,EAA5B,CAA+BC,KAA/B,CAAqCW,QAArC;AACD,KALC,CAAF;AAMAd,IAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7B,YAAMa,GAAG,GAAG,+BAAZ;AACA,YAAMC,QAAQ,GAAG,4BAAjB;AAEA,wBAAON,mBAAMO,QAAN,CAAeF,GAAf,CAAP,EAA4BX,EAA5B,CAA+BC,KAA/B,CAAqCW,QAArC;AACD,KALC,CAAF;AAMAd,IAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AAC3C,YAAMa,GAAG,GAAG,yCAAZ;AACA,YAAMC,QAAQ,GAAG,oCAAjB;AAEA,wBAAON,mBAAMO,QAAN,CAAeF,GAAf,CAAP,EAA4BX,EAA5B,CAA+BC,KAA/B,CAAqCW,QAArC;AACD,KALC,CAAF;AAMAd,IAAAA,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACnC,YAAMa,GAAG,GAAG,+BAAZ;AACA,YAAMC,QAAQ,GAAG,sCAAjB;AAEA,wBAAON,mBAAMO,QAAN,CAAeF,GAAf,CAAP,EAA4BX,EAA5B,CAA+BC,KAA/B,CAAqCW,QAArC;AACD,KALC,CAAF;AAMD,GAzBO,CAAR;AA0BD,CAtDO,CAAR","sourcesContent":["import { _configScrubbers, registerScrubber, scrubConfig, utils } from '../scrub-config';\nimport { expect } from 'chai';\n\ndescribe('scrub-config', () => {\n  beforeEach(() => {\n    _configScrubbers.length = 0;\n  });\n\n  it('should register scrubbers', () => {\n    const scrubber = function() { };\n\n    registerScrubber(scrubber);\n    expect(_configScrubbers[0]).to.equal(scrubber);\n  });\n\n  it('should run scrubbers', () => {\n    const scrubber = function(config, scrubUtils) {\n      expect(config).to.be.an('object');\n      expect(scrubUtils).to.equal(utils);\n\n      config.ran = true;\n\n      return config;\n    };\n\n    registerScrubber(scrubber);\n    const config = { ran: false };\n    const result = scrubConfig(config);\n    expect(result).to.not.equal(config);\n    expect(result).to.deep.equal({ ran: true });\n  });\n  describe('utils.scrubUrl', () => {\n    it('should change host and keep protocol and port', () => {\n      const url = 'https://meteor-up.com';\n      const expected = 'https://host.com';\n\n      expect(utils.scrubUrl(url)).to.equal(expected);\n    });\n    it('should change auth', () => {\n      const url = 'https://abc:123@meteor-up.com';\n      const expected = 'https://user:pass@host.com';\n\n      expect(utils.scrubUrl(url)).to.equal(expected);\n    });\n    it('should keep port, path, and hash', () => {\n      const url = 'https://meteor-up.com:3000/docs#plugins';\n      const expected = 'https://host.com:3000/docs#plugins';\n\n      expect(utils.scrubUrl(url)).to.equal(expected);\n    });\n    it('should change subdomains', () => {\n      const url = 'https://abc.xyz.meteor-up.com';\n      const expected = 'https://subdomain.subdomain.host.com';\n\n      expect(utils.scrubUrl(url)).to.equal(expected);\n    });\n  });\n});\n"],"file":"scrub-config.unit.js"}