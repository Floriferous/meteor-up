{"version":3,"sources":["../../src/__tests__/hooks.unit.js"],"names":["describe","beforeEach","prop","Object","keys","hooks","it","target","localScript","length","method"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,EAAAA,UAAU,CAAC,MAAM;AACf,SAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAYC,YAAZ,CAAnB,EAAuC;AACrC,aAAOA,aAAMH,IAAN,CAAP;AACD;AACF,GAJS,CAAV;AAMAI,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClC,UAAMC,MAAM,GAAG;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAf;AAEA,6BAAa,mBAAb,EAAkCD,MAAlC;AACA,yBAAOF,aAAM,mBAAN,EAA2BI,MAA3B,KAAsC,CAA7C;AACA,yBAAOJ,aAAM,mBAAN,EAA2B,CAA3B,MAAkCE,MAAzC;AACD,GANC,CAAF;AAQAD,EAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM;AACnD,UAAMC,MAAM,GAAG;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAf;AAEA,6BAAa,mBAAb,EAAkCD,MAAlC;AACA,6BAAa,mBAAb,EAAkCA,MAAlC;AAEA,yBAAOF,aAAM,mBAAN,EAA2BI,MAA3B,KAAsC,CAA7C;AACA,yBAAOJ,aAAM,mBAAN,EAA2B,CAA3B,MAAkCE,MAAzC;AACD,GARC,CAAF;AAUAD,EAAAA,EAAE,CAAC,8DAAD,EAAiE,MAAM;AACvE,UAAMC,MAAM,GAAG;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAf;AAEA,6BAAa,WAAb,EAA0BD,MAA1B;AAEA,yBAAOF,aAAM,mBAAN,EAA2B,CAA3B,MAAkCE,MAAzC;AACD,GANC,CAAF;AAOAD,EAAAA,EAAE,CAAC,8CAAD,EAAiD,MAAM;AACvD,UAAMC,MAAM,GAAG,YAAW,CAAE,CAA5B;;AAEA,6BAAa,WAAb,EAA0BA,MAA1B;AAEA,yBAAOF,aAAM,mBAAN,EAA2B,CAA3B,EAA8BK,MAA9B,KAAyCH,MAAhD;AACD,GANC,CAAF;AAOD,CAvCO,CAAR","sourcesContent":["import { hooks, registerHook } from '../hooks';\nimport assert from 'assert';\n\ndescribe('hooks', () => {\n  beforeEach(() => {\n    for (const prop of Object.keys(hooks)) {\n      delete hooks[prop];\n    }\n  });\n\n  it('should create new hooks', () => {\n    const target = { localScript: 'test' };\n\n    registerHook('pre.default.setup', target);\n    assert(hooks['pre.default.setup'].length === 1);\n    assert(hooks['pre.default.setup'][0] === target);\n  });\n\n  it('should add hooks when some already exist', () => {\n    const target = { localScript: 'test' };\n\n    registerHook('pre.default.setup', target);\n    registerHook('pre.default.setup', target);\n\n    assert(hooks['pre.default.setup'].length === 2);\n    assert(hooks['pre.default.setup'][1] === target);\n  });\n\n  it('should add missing plugin name to hooks for default commands', () => {\n    const target = { localScript: 'test' };\n\n    registerHook('pre.setup', target);\n\n    assert(hooks['pre.default.setup'][0] === target);\n  });\n  it('should move functions to the method property', () => {\n    const target = function() {};\n\n    registerHook('pre.setup', target);\n\n    assert(hooks['pre.default.setup'][0].method === target);\n  });\n});\n"],"file":"hooks.unit.js"}