{"version":3,"sources":["../src/index.js"],"names":["unwantedArgvs","yargs","help","preAPI","MupAPI","process","cwd","argv","config","getConfig","pluginList","plugins","Array","appPath","app","path","absoluteAppPath","resolvePath","base","map","plugin","name","configPath","hooks","Object","keys","forEach","key","commandWrapper","pluginName","commandName","pkg","require","resolve","rawArgv","slice","filteredArgv","api","potentialPromise","runCommand","e","_commandErrorHandler","then","catch","addModuleCommands","builder","module","moduleName","commands","command","description","length","program","usage","chalk","yellow","version","alias","global","option","requiresArg","string","boolean","strict","scriptName","epilogue","modules","subYargs","showHelp","_"],"mappings":"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","sourcesContent":["import './node-version';\nimport './nodemiral';\nimport modules, { loadPlugins, locatePluginDir } from './load-plugins';\nimport chalk from 'chalk';\nimport checkUpdates from './updates';\nimport { filterArgv } from './utils';\nimport MupAPI from './plugin-api';\nimport pkg from '../package.json';\nimport { registerHook } from './hooks';\nimport yargs from 'yargs';\n\nconst unwantedArgvs = ['_', '$0', 'settings', 'config', 'verbose', 'show-hook-names', 'help', 'servers'];\n\n// Prevent yargs from exiting the process before plugins are loaded\nyargs.help(false);\n\n// Load config before creating commands\nconst preAPI = new MupAPI(process.cwd(), process.argv, yargs.argv);\nconst config = preAPI.getConfig(false);\nlet pluginList = [];\n\n// Load plugins\nif (config.plugins instanceof Array) {\n  const appPath = config.app && config.app.path ? config.app.path : '';\n  const absoluteAppPath = preAPI.resolvePath(preAPI.base, appPath);\n\n  pluginList = config.plugins.map(plugin => ({\n    name: plugin,\n    path: locatePluginDir(plugin, preAPI.configPath, absoluteAppPath)\n  }));\n\n  loadPlugins(pluginList);\n}\n\n// Load hooks\nif (config.hooks) {\n  Object.keys(config.hooks).forEach(key => {\n    registerHook(key, config.hooks[key]);\n  });\n}\n\nfunction commandWrapper(pluginName, commandName) {\n  return function() {\n    // Runs in parallel with command\n    checkUpdates([\n      { name: pkg.name, path: require.resolve('../package.json') },\n      ...pluginList\n    ]);\n\n    const rawArgv = process.argv.slice(2);\n    const filteredArgv = filterArgv(rawArgv, yargs.argv, unwantedArgvs);\n    const api = new MupAPI(process.cwd(), filteredArgv, yargs.argv);\n    let potentialPromise;\n\n    try {\n      potentialPromise = api.runCommand(`${pluginName}.${commandName}`);\n    } catch (e) {\n      api._commandErrorHandler(e);\n    }\n\n    if (potentialPromise && typeof potentialPromise.then === 'function') {\n      potentialPromise.catch(api._commandErrorHandler);\n    }\n  };\n}\n\nfunction addModuleCommands(builder, module, moduleName) {\n  Object.keys(module.commands).forEach(commandName => {\n    const command = module.commands[commandName];\n    const name = command.name || commandName;\n\n    command.builder = command.builder || {};\n    builder.command(\n      name,\n      command.description.length === 0 ? false : command.description,\n      command.builder,\n      commandWrapper(moduleName, commandName)\n    );\n  });\n}\n\nlet program = yargs\n  .usage(`\\nUsage: ${chalk.yellow('mup')} <command> [args]`)\n  .version(pkg.version)\n  .alias('v', 'version')\n  .global('version', false)\n  .option('settings', {\n    description: 'Path to Meteor settings file',\n    requiresArg: true,\n    string: true\n  })\n  .option('config', {\n    description: 'Path to mup.js config file',\n    requiresArg: true,\n    string: true\n  })\n  .option('servers', {\n    description: 'Comma separated list of servers to use',\n    requiresArg: true,\n    string: true\n  })\n  .option('verbose', {\n    description: 'Print output from build and server scripts',\n    boolean: true\n  })\n  .option('show-hook-names', {\n    description: 'Prints names of the available hooks as the command runs',\n    boolean: true\n  })\n  .strict(true)\n  .scriptName('mup')\n  .alias('h', 'help')\n  .epilogue(\n    'For more information, read the docs at http://meteor-up.com/docs.html'\n  )\n  .help('help');\n\nObject.keys(modules).forEach(moduleName => {\n  if (moduleName !== 'default' && modules[moduleName].commands) {\n    yargs.command(\n      moduleName,\n      modules[moduleName].description,\n      subYargs => {\n        addModuleCommands(subYargs, modules[moduleName], moduleName);\n      },\n      () => {\n        yargs.showHelp('log');\n      }\n    );\n  } else if (moduleName === 'default') {\n    addModuleCommands(yargs, modules[moduleName], moduleName);\n  }\n});\n\nprogram = program.argv;\n\nif (program._.length === 0) {\n  yargs.showHelp();\n}\n"],"file":"index.js"}