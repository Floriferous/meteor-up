{"version":3,"sources":["../../../src/validate/__tests__/utils.unit.js"],"names":["describe","it","serversConfig","one","two","usedServers","three","result","expectedLength","length","details","path","reason","link","type","message","indexOf","expected","location"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCA,EAAAA,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1C,YAAMC,aAAa,GAAG;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OAAtB;AACA,YAAMC,WAAW,GAAG;AAAEF,QAAAA,GAAG,EAAE,EAAP;AAAWG,QAAAA,KAAK,EAAE;AAAlB,OAApB;AACA,YAAMC,MAAM,GAAG,yBAAaL,aAAb,EAA4BG,WAA5B,CAAf;AACA,YAAMG,cAAc,GAAG,CAAvB;AAEA,2BAAOD,MAAM,CAACE,MAAP,KAAkBD,cAAzB;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAUAR,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,IAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AAC3C,YAAMS,OAAO,GAAG,EAAhB;AACA,YAAMC,IAAI,GAAG,cAAb;AACA,YAAMC,MAAM,GAAG,uBAAf;AACA,YAAMC,IAAI,GAAG,mBAAb;AAEA,YAAM,CAACN,MAAD,IAAW,4BAAgBG,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,IAAvC,CAAjB;AAEA,2BAAON,MAAM,CAACO,IAAP,KAAgB,cAAvB;AACA,2BAAOP,MAAM,CAACI,IAAP,KAAgBA,IAAvB;AACA,2BAAOJ,MAAM,CAACQ,OAAP,CAAeC,OAAf,CAAuBJ,MAAvB,IAAiC,CAAC,CAAzC;AACA,2BAAOL,MAAM,CAACQ,OAAP,CAAeC,OAAf,CAAuBH,IAAvB,IAA+B,CAAC,CAAvC;AACD,KAZC,CAAF;AAaD,GAdO,CAAR;AAgBAb,EAAAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,IAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzC,YAAMgB,QAAQ,GAAG,qBAAjB;AACA,YAAMP,OAAO,GAAG,CAAC;AACfC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADS;AAEfI,QAAAA,OAAO,EAAE;AAFM,OAAD,CAAhB;AAIA,YAAMG,QAAQ,GAAG,KAAjB;AAEA,YAAM,CAAC;AAAEH,QAAAA;AAAF,OAAD,IAAgB,wBAAYL,OAAZ,EAAqBQ,QAArB,CAAtB;AAEA,2BAAOH,OAAO,KAAKE,QAAnB,EAA6BF,OAA7B;AACD,KAXC,CAAF;AAYAd,IAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5C,YAAMgB,QAAQ,GAAG,qBAAjB;AACA,YAAMP,OAAO,GAAG,CAAC;AACfC,QAAAA,IAAI,EAAE,OADS;AAEfI,QAAAA,OAAO,EAAE;AAFM,OAAD,CAAhB;AAIA,YAAMG,QAAQ,GAAG,KAAjB;AAEA,YAAM,CAAC;AAAEH,QAAAA;AAAF,OAAD,IAAgB,wBAAYL,OAAZ,EAAqBQ,QAArB,CAAtB;AAEA,2BAAOH,OAAO,KAAKE,QAAnB,EAA6BF,OAA7B;AACD,KAXC,CAAF;AAYD,GAzBO,CAAR;AA0BD,CArDO,CAAR","sourcesContent":["import { addDepreciation, addLocation, serversExist } from '../utils';\nimport assert from 'assert';\n\ndescribe('validator utils', () => {\n  describe('serversExist', () => {\n    it('should find nonexistent servers', () => {\n      const serversConfig = { one: {}, two: {} };\n      const usedServers = { one: {}, three: {} };\n      const result = serversExist(serversConfig, usedServers);\n      const expectedLength = 1;\n\n      assert(result.length === expectedLength);\n    });\n  });\n  describe('addDepreciation', () => {\n    it('should add a depreciation detail', () => {\n      const details = [];\n      const path = 'servers.test';\n      const reason = 'Use \"testing\" instead';\n      const link = 'http://google.com';\n\n      const [result] = addDepreciation(details, path, reason, link);\n\n      assert(result.type === 'depreciation');\n      assert(result.path === path);\n      assert(result.message.indexOf(reason) > -1);\n      assert(result.message.indexOf(link) > -1);\n    });\n  });\n\n  describe('addLocation', () => {\n    it('should add location to message', () => {\n      const expected = '\"app.a.b.c\" message';\n      const details = [{\n        path: ['a', 'b', 'c'],\n        message: 'message'\n      }];\n      const location = 'app';\n\n      const [{ message }] = addLocation(details, location);\n\n      assert(message === expected, message);\n    });\n    it('should support paths from joi v10', () => {\n      const expected = '\"app.a.b.c\" message';\n      const details = [{\n        path: 'a.b.c',\n        message: 'message'\n      }];\n      const location = 'app';\n\n      const [{ message }] = addLocation(details, location);\n\n      assert(message === expected, message);\n    });\n  });\n});\n"],"file":"utils.unit.js"}