{"version":3,"sources":["../../../src/validate/__tests__/index.unit.js"],"names":["describe","beforeEach","prop","Object","keys","_pluginValidators","it","handler","metrics","to","equal","handler2","config","servers","one","host","problems","e","console","log","errors","instanceOf","Array","depreciations"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BC,EAAAA,UAAU,CAAC,MAAM;AACf,SAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAYC,wBAAZ,CAAnB,EAAmD;AACjD,aAAOA,yBAAkBH,IAAlB,CAAP;AACD;AACF,GAJS,CAAV;AAMAF,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCM,IAAAA,EAAE,CAAC,sBAAD,EAAyB,MAAM;AAC/B,YAAMC,OAAO,GAAG,MAAM,CAAG,CAAzB;;AAEA,qCAAmB,SAAnB,EAA8BA,OAA9B;AACA,wBAAOF,yBAAkBG,OAAlB,CAA0B,CAA1B,CAAP,EAAqCC,EAArC,CAAwCC,KAAxC,CAA8CH,OAA9C;AACD,KALC,CAAF;AAOAD,IAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzC,YAAMC,OAAO,GAAG,MAAM,CAAG,CAAzB;;AACA,YAAMI,QAAQ,GAAG,MAAM,CAAG,CAA1B;;AAEA,qCAAmB,SAAnB,EAA8BJ,OAA9B;AACA,qCAAmB,SAAnB,EAA8BI,QAA9B;AAEA,wBAAON,yBAAkBG,OAAlB,CAA0B,CAA1B,CAAP,EAAqCC,EAArC,CAAwCC,KAAxC,CAA8CH,OAA9C;AACA,wBAAOF,yBAAkBG,OAAlB,CAA0B,CAA1B,CAAP,EAAqCC,EAArC,CAAwCC,KAAxC,CAA8CC,QAA9C;AACD,KATC,CAAF;AAUD,GAlBO,CAAR;AAoBAX,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBM,IAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACrC,YAAMM,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH;AADE;AADI,OAAf;AAQA,UAAIC,QAAJ;;AAEA,UAAI;AACFA,QAAAA,QAAQ,GAAG,oBAASJ,MAAT,CAAX;AACD,OAFD,CAEE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OAfoC,CAgBrC;;;AACA,wBAAOD,QAAQ,CAACI,MAAhB,EAAwBC,UAAxB,CAAmCC,KAAnC;AACA,wBAAON,QAAQ,CAACO,aAAhB,EAA+BF,UAA/B,CAA0CC,KAA1C;AACD,KAnBC,CAAF;AAoBD,GArBO,CAAR;AAsBD,CAjDO,CAAR","sourcesContent":["import validate, { _pluginValidators, addPluginValidator } from '../index';\nimport { expect } from 'chai';\n\ndescribe('validator', () => {\n  beforeEach(() => {\n    for (const prop of Object.keys(_pluginValidators)) {\n      delete _pluginValidators[prop];\n    }\n  });\n\n  describe('addPluginValidator', () => {\n    it('should add validator', () => {\n      const handler = () => { };\n\n      addPluginValidator('metrics', handler);\n      expect(_pluginValidators.metrics[0]).to.equal(handler);\n    });\n\n    it('should add multiple validators', () => {\n      const handler = () => { };\n      const handler2 = () => { };\n\n      addPluginValidator('metrics', handler);\n      addPluginValidator('metrics', handler2);\n\n      expect(_pluginValidators.metrics[0]).to.equal(handler);\n      expect(_pluginValidators.metrics[1]).to.equal(handler2);\n    });\n  });\n\n  describe('validate', () => {\n    it('should validate the config', () => {\n      const config = {\n        servers: {\n          one: {\n            host: '0.0.0.0'\n          }\n        }\n      };\n\n      let problems;\n\n      try {\n        problems = validate(config);\n      } catch (e) {\n        console.log(e);\n      }\n      // console.log(errors);\n      expect(problems.errors).instanceOf(Array);\n      expect(problems.depreciations).instanceOf(Array);\n    });\n  });\n});\n"],"file":"index.unit.js"}