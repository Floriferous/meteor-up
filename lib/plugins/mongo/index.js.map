{"version":3,"sources":["../../../src/plugins/mongo/index.js"],"names":["description","commands","_commands","validate","mongo","_validator","prepareConfig","config","app","version","env","dbName","name","split","join","MONGO_URL","docker","args","push","hooks","api","getConfig","runCommand","then"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;AAEO,MAAMA,WAAW,GAAG,4BAApB;;AACA,MAAMC,QAAQ,GAAGC,SAAjB;;AACA,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,KAAK,EAAEC;AADe,CAAjB;;;AAIA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,MAAI,CAACA,MAAM,CAACC,GAAR,IAAe,CAACD,MAAM,CAACH,KAA3B,EAAkC;AAChC,WAAOG,MAAP;AACD;;AAEDA,EAAAA,MAAM,CAACH,KAAP,CAAaK,OAAb,GAAuBF,MAAM,CAACH,KAAP,CAAaK,OAAb,IAAwB,OAA/C;AAEAF,EAAAA,MAAM,CAACC,GAAP,CAAWE,GAAX,GAAiBH,MAAM,CAACC,GAAP,CAAWE,GAAX,IAAkB,EAAnC;AACAH,EAAAA,MAAM,CAACH,KAAP,CAAaO,MAAb,GAAsBJ,MAAM,CAACH,KAAP,CAAaO,MAAb,IAAuBJ,MAAM,CAACC,GAAP,CAAWI,IAAX,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,IAA3B,CAAgC,EAAhC,CAA7C;AACAP,EAAAA,MAAM,CAACC,GAAP,CAAWE,GAAX,CAAeK,SAAf,GAA4B,2BAA0BR,MAAM,CAACH,KAAP,CAAaO,MAAO,EAA1E;;AAEA,MAAI,CAACJ,MAAM,CAACC,GAAP,CAAWQ,MAAhB,EAAwB;AACtBT,IAAAA,MAAM,CAACC,GAAP,CAAWQ,MAAX,GAAoB,EAApB;AACD;;AAED,MAAI,CAACT,MAAM,CAACC,GAAP,CAAWQ,MAAX,CAAkBC,IAAvB,EAA6B;AAC3BV,IAAAA,MAAM,CAACC,GAAP,CAAWQ,MAAX,CAAkBC,IAAlB,GAAyB,EAAzB;AACD;;AAEDV,EAAAA,MAAM,CAACC,GAAP,CAAWQ,MAAX,CAAkBC,IAAlB,CAAuBC,IAAvB,CAA4B,wBAA5B;AAEA,SAAOX,MAAP;AACD;;AAEM,MAAMY,KAAK,GAAG;AACnB,uBAAqBC,GAArB,EAA0B;AACxB,UAAMb,MAAM,GAAGa,GAAG,CAACC,SAAJ,EAAf;;AAEA,QAAId,MAAM,CAACH,KAAX,EAAkB;AAChB,aAAOgB,GAAG,CAACE,UAAJ,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,MAAMH,GAAG,CAACE,UAAJ,CAAe,aAAf,CAAzC,CAAP;AACD;AACF,GAPkB;;AAQnB,wBAAsBF,GAAtB,EAA2B;AACzB,UAAMb,MAAM,GAAGa,GAAG,CAACC,SAAJ,EAAf;;AAEA,QAAId,MAAM,CAACH,KAAX,EAAkB;AAChB,aAAOgB,GAAG,CAACE,UAAJ,CAAe,cAAf,CAAP;AACD;AACF;;AAdkB,CAAd","sourcesContent":["import * as _commands from './commands';\nimport _validator from './validate';\n\nexport const description = 'Commands to manage MongoDB';\nexport const commands = _commands;\nexport const validate = {\n  mongo: _validator\n};\n\nexport function prepareConfig(config) {\n  if (!config.app || !config.mongo) {\n    return config;\n  }\n\n  config.mongo.version = config.mongo.version || '3.4.1';\n\n  config.app.env = config.app.env || {};\n  config.mongo.dbName = config.mongo.dbName || config.app.name.split('.').join('');\n  config.app.env.MONGO_URL = `mongodb://mongodb:27017/${config.mongo.dbName}`;\n\n  if (!config.app.docker) {\n    config.app.docker = {};\n  }\n\n  if (!config.app.docker.args) {\n    config.app.docker.args = [];\n  }\n\n  config.app.docker.args.push('--link=mongodb:mongodb');\n\n  return config;\n}\n\nexport const hooks = {\n  'post.default.setup'(api) {\n    const config = api.getConfig();\n\n    if (config.mongo) {\n      return api.runCommand('mongo.setup').then(() => api.runCommand('mongo.start'));\n    }\n  },\n  'post.default.status'(api) {\n    const config = api.getConfig();\n\n    if (config.mongo) {\n      return api.runCommand('mongo.status');\n    }\n  }\n};\n"],"file":"index.js"}