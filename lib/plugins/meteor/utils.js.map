{"version":3,"sources":["../../../src/plugins/meteor/utils.js"],"names":["checkAppStarted","list","api","script","resolvePath","__dirname","app","privateDockerRegistry","getConfig","publishedPort","docker","imagePort","executeScript","vars","deployCheckWaitTime","appName","name","deployCheckPort","privateRegistry","imagePrefix","getImagePrefix","addStartAppTask","appConfig","isDeploy","commandHistory","find","removeImage","createEnv","settings","env","METEOR_SETTINGS","JSON","stringify","PORT","createServiceConfig","tag","proxy","image","toLowerCase","getSettings","replicas","Object","keys","servers","length","endpointMode","networks","hostname","targetPort","updateFailureAction","updateParallelism","Math","ceil","updateDelay","constraints","getNodeVersion","bundlePath","star","readFileFromTar","parse","nodeVersion","trim","substr","escapeEnvQuotes","entries","reduce","result","key","_value","value","replace","getSessions","swarmEnabled","getManagerSession","tmpBuildPath","appPath","rand","random","create","uuidNumbers","i","push","os","tmpdir","uuid","v4","runCommand","_executable","_args","cwd","stdin","Promise","resolve","reject","executable","args","isWin","test","process","platform","comspec","concat","options","stdio","stdout","stderr","commandProcess","setEncoding","write","end","on","e","console","log","code","Error","join","getBuildOptions","config","getBasePath","path","buildOptions","buildLocation","shouldRebuild","rebuild","getOptions","buildCached","fs","existsSync","currentImageTag","serverInfo","values","images","filter","Repository","map","parseInt","Tag","isNaN","sort","a","b","tarPath","filePath","data","found","onentry","entry","d","tar","t","file","err","combined","Buffer","toString"],"mappings":"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","sourcesContent":["import { cloneDeep, flatMap } from 'lodash';\nimport fs from 'fs';\nimport os from 'os';\nimport {\n  prepareBundleSupported\n} from './prepare-bundle.js';\nimport random from 'random-seed';\nimport { spawn } from 'child_process';\nimport tar from 'tar';\nimport uuid from 'uuid';\n\nexport function checkAppStarted(list, api) {\n  const script = api.resolvePath(__dirname, 'assets/meteor-deploy-check.sh');\n  const { app, privateDockerRegistry } = api.getConfig();\n  const publishedPort = app.docker.imagePort || 80;\n\n  list.executeScript('Verifying Deployment', {\n    script,\n    vars: {\n      deployCheckWaitTime: app.deployCheckWaitTime || 60,\n      appName: app.name,\n      deployCheckPort: publishedPort,\n      privateRegistry: privateDockerRegistry,\n      imagePrefix: getImagePrefix(privateDockerRegistry)\n    }\n  });\n\n  return list;\n}\n\nexport function addStartAppTask(list, api) {\n  const {\n    app: appConfig,\n    privateDockerRegistry\n  } = api.getConfig();\n  const isDeploy = api.commandHistory.find(\n    ({ name }) => name === 'meteor.deploy'\n  );\n\n  list.executeScript('Start Meteor', {\n    script: api.resolvePath(__dirname, 'assets/meteor-start.sh'),\n    vars: {\n      appName: appConfig.name,\n      removeImage: isDeploy && !prepareBundleSupported(appConfig.docker),\n      privateRegistry: privateDockerRegistry\n    }\n  });\n\n  return list;\n}\n\nexport function createEnv(appConfig, settings) {\n  const env = cloneDeep(appConfig.env);\n\n  env.METEOR_SETTINGS = JSON.stringify(settings);\n\n  // setting PORT in the config is used for the publicly accessible\n  // port.\n  // docker.imagePort is used for the port exposed from the container.\n  // In case the docker.imagePort is different than the container's\n  // default port, we set the env PORT to docker.imagePort.\n  env.PORT = appConfig.docker.imagePort;\n\n  return env;\n}\n\nexport function createServiceConfig(api, tag) {\n  const {\n    app,\n    proxy\n  } = api.getConfig();\n\n  return {\n    image: `mup-${app.name.toLowerCase()}:${tag || 'latest'}`,\n    name: app.name,\n    env: createEnv(app, api.getSettings()),\n    replicas: Object.keys(app.servers).length,\n    endpointMode: proxy ? 'dnsrr' : 'vip',\n    networks: app.docker.networks,\n    hostname: `{{.Node.Hostname}}-${app.name}-{{.Task.ID}}`,\n    publishedPort: proxy ? null : app.env.PORT || 80,\n    targetPort: proxy ? null : app.docker.imagePort,\n    updateFailureAction: 'rollback',\n    updateParallelism: Math.ceil(Object.keys(app.servers).length / 3),\n    updateDelay: 20 * 1000,\n    constraints: [\n      `node.labels.mup-app-${app.name}==true`\n    ]\n  };\n}\n\nexport async function getNodeVersion(bundlePath) {\n  let star = await readFileFromTar(bundlePath, 'bundle/star.json');\n  star = JSON.parse(star || '{}');\n\n  // star.json started having nodeVersion in Meteor 1.5.2\n  if (star && star.nodeVersion) {\n    return star.nodeVersion;\n  }\n\n  const nodeVersion = await readFileFromTar(bundlePath, 'bundle/.node_version.txt');\n\n  // Remove leading 'v'\n  return nodeVersion.trim().substr(1);\n}\n\nexport function escapeEnvQuotes(env) {\n  return Object.entries(env).reduce((result, [key, _value]) => {\n    let value = _value;\n\n    if (typeof value === 'string') {\n      value = value.replace(/\"/, '\\\\\"');\n    }\n    result[key] = value;\n\n    return result;\n  }, {});\n}\n\nexport async function getSessions(api) {\n  if (api.swarmEnabled()) {\n    return [await api.getManagerSession()];\n  }\n\n  return api.getSessions(['app']);\n}\n\nexport function tmpBuildPath(appPath, api) {\n  const rand = random.create(appPath);\n  const uuidNumbers = [];\n\n  for (let i = 0; i < 16; i++) {\n    uuidNumbers.push(rand(255));\n  }\n\n  return api.resolvePath(\n    os.tmpdir(),\n    `mup-meteor-${uuid.v4({ random: uuidNumbers })}`\n  );\n}\n\nexport function runCommand(_executable, _args, { cwd, stdin } = {}) {\n  return new Promise((resolve, reject) => {\n    let executable = _executable;\n    let args = _args;\n    const isWin = /^win/.test(process.platform);\n    if (isWin) {\n      // Sometimes cmd.exe not available in the path\n      // See: http://goo.gl/ADmzoD\n      executable = process.env.comspec || 'cmd.exe';\n      args = ['/c', _executable].concat(args);\n    }\n\n    const options = {\n      cwd,\n      stdio: [\n        stdin ? 'pipe' : process.stdin,\n        process.stdout,\n        process.stderr\n      ]\n    };\n    const commandProcess = spawn(executable, args, options);\n\n    if (stdin) {\n      commandProcess.stdin.setEncoding('utf-8');\n      commandProcess.stdin.write(`${stdin}\\r\\n`);\n      commandProcess.stdin.end();\n    }\n\n    commandProcess.on('error', e => {\n      console.log(options);\n      console.log(e);\n      console.log(`This error usually happens when ${_executable} is not installed.`);\n\n      return reject(e);\n    });\n    commandProcess.on('close', code => {\n      if (code > 0) {\n        return reject(new Error(`\"${executable} ${args.join(' ')}\" exited with the code ${code}`));\n      }\n\n      resolve();\n    });\n  });\n}\n\nexport function getBuildOptions(api) {\n  const config = api.getConfig().app;\n  const appPath = api.resolvePath(api.getBasePath(), config.path);\n\n  const buildOptions = config.buildOptions || {};\n\n  buildOptions.buildLocation =\n    buildOptions.buildLocation || tmpBuildPath(appPath, api);\n\n  return buildOptions;\n}\n\nexport function shouldRebuild(api) {\n  let rebuild = true;\n  const { buildLocation } = getBuildOptions(api);\n  const bundlePath = api.resolvePath(buildLocation, 'bundle.tar.gz');\n\n  if (api.getOptions()['cached-build']) {\n    const buildCached = fs.existsSync(bundlePath);\n\n    // If build is not cached, rebuild remains true\n    // even though the --cached-build flag was used\n    if (buildCached) {\n      rebuild = false;\n    }\n  }\n\n  return rebuild;\n}\n\nexport function getImagePrefix(privateRegistry) {\n  if (privateRegistry && privateRegistry.imagePrefix) {\n    return `${privateRegistry.imagePrefix}/mup-`;\n  }\n\n  return 'mup-';\n}\n\nexport function currentImageTag(serverInfo, appName) {\n  const result = flatMap(\n    Object.values(serverInfo),\n    ({images}) => images || []\n  )\n    .filter(image => image.Repository === `mup-${appName}`)\n    .map(image => parseInt(image.Tag, 10))\n    .filter(tag => !isNaN(tag))\n    .sort((a, b) => b - a);\n\n  return result[0] || 0;\n}\n\nexport function readFileFromTar(tarPath, filePath) {\n  const data = [];\n  let found = false;\n\n  const onentry = entry => {\n    if (entry.path === filePath) {\n      found = true;\n      entry.on('data', d => data.push(d));\n    }\n  };\n\n  return new Promise((resolve, reject) => {\n    tar.t({\n      onentry,\n      file: tarPath\n    }, err => {\n      if (err) {\n        return reject(err);\n      }\n\n      if (!found) {\n        return reject(new Error('file-not-found'));\n      }\n\n      const combined = Buffer.concat(data);\n      resolve(combined.toString('utf-8'));\n    });\n  });\n}\n"],"file":"utils.js"}