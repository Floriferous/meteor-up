{"version":3,"sources":["../../../src/plugins/meteor/build.js"],"names":["log","buildApp","appPath","buildOptions","verbose","api","fs","statSync","resolvePath","e","code","console","process","exit","Promise","resolve","reject","callback","err","buildMeteorApp","executable","args","buildLocation","debug","push","mobileSettings","JSON","stringify","serverOnly","server","allowIncompatibleUpdate","isWin","test","platform","concat","env","comspec","options","cwd","METEOR_HEADLESS","stdio","stdin","stdout","stderr","join","meteor","on","archiveApp","cb","bundlePath","tar","c","file","onwarn","message","data","portable","gzip","level"],"mappings":"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","sourcesContent":["import debug from 'debug';\nimport fs from 'fs';\nimport { spawn } from 'child_process';\nimport tar from 'tar';\n\nconst log = debug('mup:module:meteor');\n\nexport default function buildApp(appPath, buildOptions, verbose, api) {\n  // Check if the folder exists\n  try {\n    fs.statSync(api.resolvePath(appPath));\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      console.log(`${api.resolvePath(appPath)} does not exist`);\n    } else {\n      console.log(e);\n    }\n\n    process.exit(1);\n  }\n\n  // Make sure it is a Meteor app\n  try {\n    // checks for release file since there also is a\n    // .meteor folder in the user's home\n    fs.statSync(api.resolvePath(appPath, '.meteor/release'));\n  } catch (e) {\n    console.log(`${api.resolvePath(appPath)} is not a meteor app`);\n    process.exit(1);\n  }\n\n  return new Promise((resolve, reject) => {\n    const callback = err => {\n      if (err) {\n        reject(err);\n\n        return;\n      }\n      resolve();\n    };\n    buildMeteorApp(appPath, buildOptions, verbose, code => {\n      if (code === 0) {\n        callback();\n\n        return;\n      }\n      console.log('\\n=> Build Error. Check the logs printed above.');\n      process.exit(1);\n    });\n  });\n}\n\nfunction buildMeteorApp(appPath, buildOptions, verbose, callback) {\n  let executable = buildOptions.executable || 'meteor';\n  let args = [\n    'build',\n    '--directory',\n    buildOptions.buildLocation,\n    '--architecture',\n    'os.linux.x86_64'\n  ];\n\n  if (buildOptions.debug) {\n    args.push('--debug');\n  }\n\n  if (buildOptions.mobileSettings) {\n    args.push('--mobile-settings');\n    args.push(JSON.stringify(buildOptions.mobileSettings));\n  }\n\n  if (buildOptions.serverOnly) {\n    args.push('--server-only');\n  } else if (!buildOptions.mobileSettings) {\n    args.push('--mobile-settings');\n    args.push(`${appPath}/settings.json`);\n  }\n\n  if (buildOptions.server) {\n    args.push('--server');\n    args.push(buildOptions.server);\n  }\n\n  if (buildOptions.allowIncompatibleUpdate) {\n    args.push('--allow-incompatible-update');\n  }\n\n  const isWin = /^win/.test(process.platform);\n  if (isWin) {\n    // Sometimes cmd.exe not available in the path\n    // See: http://goo.gl/ADmzoD\n    args = ['/c', executable].concat(args);\n    executable = process.env.comspec || 'cmd.exe';\n  }\n\n  const options = {\n    cwd: appPath,\n    env: {\n      ...process.env,\n      METEOR_HEADLESS: 1\n    },\n    stdio: [process.stdin, process.stdout, process.stderr]\n  };\n\n  log(`Build Path: ${appPath}`);\n  log(`Build Command:  ${executable} ${args.join(' ')}`);\n\n  const meteor = spawn(executable, args, options);\n\n  meteor.on('error', e => {\n    console.log(options);\n    console.log(e);\n    console.log('This error usually happens when meteor is not installed.');\n  });\n  meteor.on('close', callback);\n}\n\nexport function archiveApp(buildLocation, api, cb) {\n  const bundlePath = api.resolvePath(buildLocation, 'bundle.tar.gz');\n\n  log('starting archive');\n  tar.c({\n    file: bundlePath,\n    onwarn(message, data) { console.log(message, data); },\n    cwd: buildLocation,\n    portable: true,\n    gzip: {\n      level: 9\n    }\n  }, ['bundle'], err => {\n    log('archive finished');\n\n    if (err) {\n      console.log('=> Archiving failed: ', err.message);\n    }\n\n    cb(err);\n  });\n}\n"],"file":"build.js"}