{"version":3,"sources":["../../../src/plugins/default/init.js"],"names":["log","sh","config","silent","findDestination","api","base","process","cwd","inMeteorApp","fs","existsSync","resolvePath","parentMeteorApp","parentChildren","readdirSync","siblingMeteorApp","otherChild","length","filter","child","path","basename","dest","appPath","createFolder","createDeployFolder","folderPath","mkdirSync","init","configSource","__dirname","settingsSource","settingsDest","configDest","configExists","settingsExist","console","cp","configContents","readFileSync","toString","replace","writeFileSync"],"mappings":"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","sourcesContent":["import debug from 'debug';\nimport fs from 'fs';\nimport path from 'path';\nimport sh from 'shelljs';\n\nconst log = debug('mup:init');\n\nsh.config.silent = true;\n\nfunction findDestination(api) {\n  const base = process.cwd();\n\n  const inMeteorApp = fs.existsSync(api.resolvePath(base, '.meteor/release'));\n  const parentMeteorApp = fs.existsSync(api.resolvePath(base, '../.meteor/release'));\n  const parentChildren = fs.readdirSync(api.resolvePath(base, '../'));\n  let siblingMeteorApp = false;\n  let otherChild = '';\n\n  if (parentChildren.length === 2) {\n    otherChild = parentChildren\n      .filter(child => child !== path.basename(base))[0];\n    if (fs.existsSync(api.resolvePath('..', otherChild, '.meteor/release'))) {\n      siblingMeteorApp = true;\n    }\n  }\n\n  log('in meteor app', inMeteorApp);\n  log('Parent Meteor app', parentMeteorApp);\n  log('siblingMeteorApp', siblingMeteorApp);\n\n  let dest = base;\n  let appPath = './';\n  let createFolder = false;\n\n  if (inMeteorApp) {\n    dest = api.resolvePath(base, '.deploy');\n    appPath = '../';\n    createFolder = true;\n  } else if (parentMeteorApp) {\n    dest = base;\n    appPath = '../';\n  } else if (siblingMeteorApp) {\n    dest = base;\n    appPath = `../${otherChild}`;\n  }\n\n  return {\n    appPath,\n    dest,\n    createFolder\n  };\n}\n\nfunction createDeployFolder(api) {\n  const base = process.cwd();\n  const folderPath = api.resolvePath(base, '.deploy');\n  if (!fs.existsSync(folderPath)) {\n    fs.mkdirSync(folderPath);\n  }\n}\n\nexport default function init(api) {\n  const configSource = api.resolvePath(__dirname, 'template/mup.js.sample');\n  const settingsSource = api.resolvePath(__dirname, 'template/settings.json');\n\n  const { appPath, dest, createFolder } = findDestination(api);\n\n  const settingsDest = api.resolvePath(dest, 'settings.json');\n  const configDest = api.resolvePath(dest, 'mup.js');\n\n  const configExists = fs.existsSync(api.resolvePath(configDest));\n  const settingsExist = fs.existsSync(settingsDest);\n\n  if (createFolder) {\n    createDeployFolder(api);\n    console.log('Created .deploy folder');\n  }\n\n  if (!settingsExist) {\n    sh.cp(settingsSource, settingsDest);\n    console.log(`Created settings.json at ${settingsDest}`);\n  } else {\n    console.log('Skipping creation of settings.json.');\n    console.log(`settings.json already exists at ${settingsDest}`);\n  }\n\n  if (!configExists) {\n    const configContents = fs.readFileSync(configSource).toString()\n      .replace('<app path>', appPath);\n    fs.writeFileSync(configDest, configContents);\n\n    console.log(`Created mup.js at ${configDest}`);\n    console.log('');\n    console.log('Next Steps:');\n    console.log('');\n    console.log('  Open mup.js and edit the config to meet your needs.');\n    console.log('  Required changes have been marked with a TODO comment.');\n    console.log('');\n    console.log('  Available options can be found in the docs at');\n    console.log('    https://github.com/zodern/meteor-up');\n    console.log('');\n    console.log('  Then, run the command:');\n    console.log('    mup setup');\n  } else {\n    console.log('Skipping creation of mup.js');\n    console.log(`mup.js already exists at ${configDest}`);\n  }\n}\n"],"file":"init.js"}