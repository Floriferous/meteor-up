{"version":3,"sources":["../../../src/plugins/default/command-handlers.js"],"names":["log","deploy","logs","reconfig","restart","setup","api","process","on","code","console","runCommand","start","stop","ssh","servers","getConfig","serverOption","getArgs","enabledSessions","getSessionsForServers","Object","keys","filter","session","length","selectedHost","_host","find","name","host","join","exitCode","server","sshOptions","_createSSHOptions","conn","Client","shell","err","stream","end","exit","stdin","setRawMode","pipe","stdout","stderr","setWindow","rows","columns","connect","validate","getOptions","show","scrub","config","scrubConfig","JSON","stringify","errors","validateConfig","chalk","green","statusColor","versionCorrect","distributionCorrect","hasAptGet","defaultBash","_overallColor","color","overallColor","red","yellow","status","values","lines","command","results","runSSHCommand","concurrency","forEach","output","text","version","distribution","aptGet","bash","trim","split","parseInt","colors","push"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport { Client } from 'ssh2';\nimport debug from 'debug';\nimport { map } from 'bluebird';\n\nconst log = debug('mup:module:default');\n\nexport function deploy() {\n  log('exec => mup deploy');\n}\n\nexport function logs() {\n  log('exec => mup logs');\n}\n\nexport function reconfig() {\n  log('exec => mup reconfig');\n}\n\nexport function restart() {\n  log('exec => mup restart');\n}\n\nexport function setup(api) {\n  process.on('exit', code => {\n    if (code > 0) {\n      return;\n    }\n\n    console.log('');\n    console.log('Next, you should run:');\n    console.log('    mup deploy');\n  });\n\n  log('exec => mup setup');\n\n  return api.runCommand('docker.setup');\n}\n\nexport function start() {\n  log('exec => mup start');\n}\n\nexport function stop() {\n  log('exec => mup stop');\n}\n\nexport function ssh(api) {\n  const servers = api.getConfig().servers;\n  let serverOption = api.getArgs()[1];\n\n  // Check how many sessions are enabled. Usually is all servers,\n  // but can be reduced by the `--servers` option\n  const enabledSessions = api.getSessionsForServers(Object.keys(servers))\n    .filter(session => session);\n\n  if (!(serverOption in servers)) {\n    if (enabledSessions.length === 1) {\n      const selectedHost = enabledSessions[0]._host;\n      serverOption = Object.keys(servers).find(\n        name => servers[name].host === selectedHost\n      );\n    } else {\n      console.log('mup ssh <server>');\n      console.log('Available servers are:\\n', Object.keys(servers).join('\\n '));\n      process.exitCode = 1;\n\n      return;\n    }\n  }\n\n  const server = servers[serverOption];\n  const sshOptions = api._createSSHOptions(server);\n\n  const conn = new Client();\n  conn.on('ready', () => {\n    conn.shell((err, stream) => {\n      if (err) {\n        throw err;\n      }\n      stream.on('close', () => {\n        conn.end();\n        process.exit();\n      });\n\n      process.stdin.setRawMode(true);\n      process.stdin.pipe(stream);\n\n      stream.pipe(process.stdout);\n      stream.stderr.pipe(process.stderr);\n      stream.setWindow(process.stdout.rows, process.stdout.columns);\n\n      process.stdout.on('resize', () => {\n        stream.setWindow(process.stdout.rows, process.stdout.columns);\n      });\n    });\n  }).connect(sshOptions);\n}\n\nexport function validate(api) {\n  // Shows validation errors\n  api.getConfig();\n\n  if (api.getOptions().show || api.getOptions().scrub) {\n    let config = api.getConfig();\n\n    if (api.getOptions().scrub) {\n      config = api.scrubConfig();\n    }\n    console.log(JSON.stringify(config, null, 2));\n  }\n\n  const errors = api.validateConfig('');\n  if (errors.length > 0) {\n    process.exitCode = 1;\n  } else {\n    console.log(chalk.green('\\u2713 Config is valid'));\n  }\n}\n\nfunction statusColor(\n  versionCorrect,\n  distributionCorrect,\n  hasAptGet,\n  defaultBash,\n  _overallColor\n) {\n  let color = chalk.green;\n  let overallColor = _overallColor;\n\n  if (!hasAptGet) {\n    color = chalk.red;\n    overallColor = 'red';\n  } else if (!distributionCorrect) {\n    color = chalk.yellow;\n    if (overallColor !== 'red') {\n      overallColor = 'yellow';\n    }\n  } else if (!versionCorrect) {\n    color = chalk.red;\n    overallColor = 'red';\n  } else if (!defaultBash) {\n    color = chalk.red;\n    overallColor = 'red';\n  }\n\n  return {\n    color,\n    overallColor\n  };\n}\n\nexport async function status(api) {\n  const servers = Object.values(api.getConfig().servers);\n  const lines = [];\n  let overallColor = 'green';\n  const command = 'lsb_release -r -s || echo \"false\"; lsb_release -is; apt-get -v &> /dev/null && echo \"true\" || echo \"false\"; echo $BASH';\n  const results = await map(\n    servers,\n    server => api.runSSHCommand(server, command),\n    { concurrency: 2 }\n  );\n\n  results.forEach(({ host, output }) => {\n    let text = `  - ${host}: `;\n    let color = chalk.green;\n    const [\n      version,\n      distribution,\n      aptGet,\n      bash = ''\n    ] = output.trim().split('\\n');\n\n    const versionCorrect = parseInt(version, 10) > 13;\n    const distributionCorrect = distribution === 'Ubuntu';\n    const hasAptGet = aptGet.trim() === 'true';\n    const defaultBash = bash.trim().length > 0;\n\n    const colors = statusColor(\n      versionCorrect,\n      distributionCorrect,\n      hasAptGet,\n      defaultBash,\n      overallColor\n    );\n\n    color = colors.color;\n    overallColor = colors.overallColor;\n\n    text += color(`${distribution} ${version}`);\n    if (!hasAptGet) {\n      text += chalk.red(' apt-get not available');\n    }\n\n    if (!defaultBash) {\n      text += chalk.red(' Bash is not the default shell');\n    }\n\n    lines.push(text);\n  });\n\n  console.log(chalk[overallColor]('=> Servers'));\n  console.log(lines.join('\\n'));\n}\n"],"file":"command-handlers.js"}