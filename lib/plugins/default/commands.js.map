{"version":3,"sources":["../../../src/plugins/default/commands.js"],"names":["init","description","handler","initHandler","deploy","builder","yargs","option","boolean","commandHandlers","logs","strict","number","alias","reconfig","restart","setup","start","stop","ssh","name","positional","validate","bool","status"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEO,MAAMA,IAAI,GAAG;AAClBC,EAAAA,WAAW,EAAE,iCADK;AAElBC,EAAAA,OAAO,EAAEC;AAFS,CAAb;;AAKA,MAAMC,MAAM,GAAG;AACpBH,EAAAA,WAAW,EAAE,sBADO;;AAEpBI,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,WAAOA,KAAK,CAACC,MAAN,CAAa,cAAb,EAA6B;AAClCN,MAAAA,WAAW,EAAE,gCADqB;AAElCO,MAAAA,OAAO,EAAE;AAFyB,KAA7B,CAAP;AAID,GAPmB;;AAQpBN,EAAAA,OAAO,EAAEO,eAAe,CAACL;AARL,CAAf;;AAWA,MAAMM,IAAI,GAAG;AAClBT,EAAAA,WAAW,EAAE,qDADK;;AAElBI,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,WAAOA,KAAK,CACTK,MADI,CACG,KADH,EAEJJ,MAFI,CAEG,MAFH,EAEW;AACdN,MAAAA,WAAW,EAAE,kDADC;AAEdW,MAAAA,MAAM,EAAE;AAFM,KAFX,EAMJL,MANI,CAMG,QANH,EAMa;AAChBN,MAAAA,WAAW,EAAE,mBADG;AAEhBY,MAAAA,KAAK,EAAE,GAFS;AAGhBL,MAAAA,OAAO,EAAE;AAHO,KANb,CAAP;AAWD,GAdiB;;AAelBN,EAAAA,OAAO,EAAEO,eAAe,CAACC;AAfP,CAAb;;AAkBA,MAAMI,QAAQ,GAAG;AACtBb,EAAAA,WAAW,EAAE,qDADS;AAEtBC,EAAAA,OAAO,EAAEO,eAAe,CAACK;AAFH,CAAjB;;AAKA,MAAMC,OAAO,GAAG;AACrBd,EAAAA,WAAW,EAAE,aADQ;AAErBC,EAAAA,OAAO,EAAEO,eAAe,CAACM;AAFJ,CAAhB;;AAKA,MAAMC,KAAK,GAAG;AACnBf,EAAAA,WAAW,EAAE,kEADM;AAEnBC,EAAAA,OAAO,EAAEO,eAAe,CAACO;AAFN,CAAd;;AAKA,MAAMC,KAAK,GAAG;AACnBhB,EAAAA,WAAW,EAAE,WADM;AAEnBC,EAAAA,OAAO,EAAEO,eAAe,CAACQ;AAFN,CAAd;;AAKA,MAAMC,IAAI,GAAG;AAClBjB,EAAAA,WAAW,EAAE,UADK;AAElBC,EAAAA,OAAO,EAAEO,eAAe,CAACS;AAFP,CAAb;;AAKA,MAAMC,GAAG,GAAG;AACjBC,EAAAA,IAAI,EAAE,cADW;AAEjBnB,EAAAA,WAAW,EAAE,iBAFI;AAGjBC,EAAAA,OAAO,EAAEO,eAAe,CAACU,GAHR;;AAIjBd,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACbA,IAAAA,KAAK,CAACe,UAAN,CAAiB,QAAjB,EAA2B;AACzBpB,MAAAA,WAAW,EAAE;AADY,KAA3B,EAEGU,MAFH,CAEU,KAFV;AAGD;;AARgB,CAAZ;;AAWA,MAAMW,QAAQ,GAAG;AACtBrB,EAAAA,WAAW,EAAE,iBADS;;AAEtBI,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,WAAOA,KAAK,CAACC,MAAN,CAAa,MAAb,EAAqB;AAC1BN,MAAAA,WAAW,EAAE,6CADa;AAE1BsB,MAAAA,IAAI,EAAE;AAFoB,KAArB,EAGJhB,MAHI,CAGG,OAHH,EAGY;AACjBN,MAAAA,WAAW,EAAE,qDADI;AAEjBsB,MAAAA,IAAI,EAAE;AAFW,KAHZ,CAAP;AAOD,GAVqB;;AAWtBrB,EAAAA,OAAO,EAAEO,eAAe,CAACa;AAXH,CAAjB;;AAcA,MAAME,MAAM,GAAG;AACpBvB,EAAAA,WAAW,EAAE,yDADO;AAEpBC,EAAAA,OAAO,EAAEO,eAAe,CAACe,MAFL;;AAGpBnB,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,WAAOA,KAAK,CAACC,MAAN,CAAa,UAAb,EAAyB;AAC9BN,MAAAA,WAAW,EAAE,+DADiB;AAE9BsB,MAAAA,IAAI,EAAE;AAFwB,KAAzB,CAAP;AAID;;AARmB,CAAf","sourcesContent":["import * as commandHandlers from './command-handlers';\nimport initHandler from './init';\n\nexport const init = {\n  description: 'Setup files for new mup project',\n  handler: initHandler\n};\n\nexport const deploy = {\n  description: 'Deploy app to server',\n  builder(yargs) {\n    return yargs.option('cached-build', {\n      description: 'Use build from previous deploy',\n      boolean: true\n    });\n  },\n  handler: commandHandlers.deploy\n};\n\nexport const logs = {\n  description: 'Show app\\'s logs. Supports options from docker logs',\n  builder(yargs) {\n    return yargs\n      .strict(false)\n      .option('tail', {\n        description: 'Number of lines to show from the end of the logs',\n        number: true\n      })\n      .option('follow', {\n        description: 'Follow log output',\n        alias: 'f',\n        boolean: true\n      });\n  },\n  handler: commandHandlers.logs\n};\n\nexport const reconfig = {\n  description: 'Updates server env and start script to match config',\n  handler: commandHandlers.reconfig\n};\n\nexport const restart = {\n  description: 'Restart app',\n  handler: commandHandlers.restart\n};\n\nexport const setup = {\n  description: 'Install dependencies, custom certificates, and MongoDB on server',\n  handler: commandHandlers.setup\n};\n\nexport const start = {\n  description: 'Start app',\n  handler: commandHandlers.start\n};\n\nexport const stop = {\n  description: 'Stop app',\n  handler: commandHandlers.stop\n};\n\nexport const ssh = {\n  name: 'ssh [server]',\n  description: 'SSH into server',\n  handler: commandHandlers.ssh,\n  builder(yargs) {\n    yargs.positional('server', {\n      description: 'Name of server'\n    }).strict(false);\n  }\n};\n\nexport const validate = {\n  description: 'validate config',\n  builder(yargs) {\n    return yargs.option('show', {\n      description: 'Show config after being modified by plugins',\n      bool: true\n    }).option('scrub', {\n      description: 'Shows the config with sensitive information removed',\n      bool: true\n    });\n  },\n  handler: commandHandlers.validate\n};\n\nexport const status = {\n  description: 'View status of your app, databases and other components',\n  handler: commandHandlers.status,\n  builder(yargs) {\n    return yargs.option('overview', {\n      description: 'Simplified report to quickly see the status of each component',\n      bool: true\n    });\n  }\n};\n"],"file":"commands.js"}