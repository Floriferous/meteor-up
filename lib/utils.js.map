{"version":3,"sources":["../src/utils.js"],"names":["log","addStdioHandlers","list","_taskQueue","map","task","options","onStdout","data","process","stdout","write","onStderr","stderr","runTaskList","sessions","opts","verbose","showDuration","forEach","Promise","resolve","reject","run","summaryMap","host","hasOwnProperty","summary","error","nodemiralHistory","history","Callback2Stream","stream","Readable","constructor","addData","reading","push","_read","shouldContinue","shift","getDockerLogs","name","args","showHost","command","join","promises","session","input","_host","lineSeperator","readline","createInterface","terminal","on","console","execute","bind","all","createSSHOptions","server","sshAgent","env","SSH_AUTH_SOCK","ssh","port","username","pem","privateKey","fs","readFileSync","resolvePath","password","existsSync","agent","runSessionCommand","client","done","_withSshClient","_client","_done","output","err","result","code","runSSHCommand","info","nodemiral","conn","Client","connect","once","exec","outputStream","end","forwardPort","localAddress","localPort","remoteAddress","remotePort","onReady","onError","onConnection","sshOptions","netServer","net","createServer","netConnection","sshConnection","forwardOut","sshStream","pipe","listen","countOccurences","needle","haystack","regex","RegExp","match","length","paths","expandedPaths","_path","path","moduleNotFoundIsPath","e","modulePath","message","split","pathPosition","indexOf","argvContains","argvArray","option","find","value","createOption","key","filterArgv","argv","unwanted","_","slice","Object","keys","undefined"],"mappings":"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","sourcesContent":["import { Client } from 'ssh2';\nimport debug from 'debug';\nimport expandTilde from 'expand-tilde';\nimport fs from 'fs';\nimport net from 'net';\nimport nodemiral from '@zodern/nodemiral';\nimport path from 'path';\nimport { promisify } from 'bluebird';\nimport readline from 'readline';\nimport stream from 'stream';\n\nconst log = debug('mup:utils');\n\nexport function addStdioHandlers(list) {\n  list._taskQueue = list._taskQueue.map(task => {\n    task.options = task.options || {};\n\n    task.options.onStdout = () => data => {\n      process.stdout.write(data);\n    };\n\n    task.options.onStderr = () => data => {\n      process.stderr.write(data);\n    };\n\n    return task;\n  });\n}\n\nexport function runTaskList(list, sessions, opts) {\n  if (opts && opts.verbose) {\n    addStdioHandlers(list);\n    delete opts.verbose;\n  }\n\n  if (opts && opts.showDuration) {\n    list._taskQueue.forEach(task => {\n      task.options = task.options || {};\n      task.options.showDuration = true;\n    });\n    delete opts.showDuration;\n  }\n\n  return new Promise((resolve, reject) => {\n    list.run(sessions, opts, summaryMap => {\n      for (const host in summaryMap) {\n        if (summaryMap.hasOwnProperty(host)) {\n          const summary = summaryMap[host];\n\n          if (summary.error) {\n            const error = summary.error;\n\n            error.nodemiralHistory = summary.history;\n            reject(error);\n\n            return;\n          }\n        }\n      }\n\n      resolve();\n    });\n  });\n}\n\n// Implements a simple readable stream to pass\n// the logs from nodemiral to readline which\n// then splits it into individual lines.\nclass Callback2Stream extends stream.Readable {\n  constructor(options) {\n    // Calls the stream.Readable(options) constructor\n    super(options);\n\n    this.data = [];\n  }\n  addData(data) {\n    if (this.reading) {\n      this.reading = this.push(data);\n    } else {\n      this.data.push(data);\n    }\n  }\n  _read() {\n    this.reading = true;\n    this.data.forEach(() => {\n      const shouldContinue = this.reading && this.push(this.data.shift());\n\n      if (!shouldContinue) {\n        this.reading = false;\n      }\n    });\n  }\n}\n\nexport function getDockerLogs(name, sessions, args, showHost = true) {\n  const command = `sudo docker ${args.join(' ')} ${name} 2>&1`;\n\n  log(`getDockerLogs command: ${command}`);\n\n  const promises = sessions.map(session => {\n    const input = new Callback2Stream();\n    const host = showHost ? `[${session._host}]` : '';\n    const lineSeperator = readline.createInterface({\n      input,\n      terminal: true\n    });\n\n    lineSeperator.on('line', data => {\n      console.log(host + data);\n    });\n    const options = {\n      onStdout: data => {\n        input.addData(data);\n      },\n      onStderr: data => {\n        // the logs all come in on stdout so stderr isn't added to lineSeperator\n        process.stdout.write(host + data);\n      }\n    };\n\n    return promisify(session.execute.bind(session))(command, options);\n  });\n\n  return Promise.all(promises);\n}\n\nexport function createSSHOptions(server) {\n  const sshAgent = process.env.SSH_AUTH_SOCK;\n  const ssh = {\n    host: server.host,\n    port: (server.opts && server.opts.port) || 22,\n    username: server.username\n  };\n\n  if (server.pem) {\n    ssh.privateKey = fs.readFileSync(resolvePath(server.pem), 'utf8');\n  } else if (server.password) {\n    ssh.password = server.password;\n  } else if (sshAgent && fs.existsSync(sshAgent)) {\n    ssh.agent = sshAgent;\n  }\n\n  return ssh;\n}\n\nfunction runSessionCommand(session, command) {\n  return new Promise((resolve, reject) => {\n    let client;\n    let done;\n\n    // callback is called synchronously\n    session._withSshClient((_client, _done) => {\n      client = _client;\n      done = _done;\n    });\n\n    let output = '';\n\n    client.execute(\n      command,\n      {\n        onStderr: data => {\n          output += data;\n        },\n        onStdout: data => {\n          output += data;\n        }\n      },\n      (err, result) => {\n        // eslint-disable-next-line callback-return\n        done();\n\n        if (err) {\n          return reject(err);\n        }\n\n        resolve({\n          code: result.code,\n          output,\n          host: session._host\n        });\n      }\n    );\n  });\n}\n\n// info can either be an object from the server object in the config\n// or it can be a nodemiral session\nexport function runSSHCommand(info, command) {\n  if (info instanceof nodemiral.session) {\n    return runSessionCommand(info, command);\n  }\n\n  return new Promise((resolve, reject) => {\n    const ssh = createSSHOptions(info);\n    const conn = new Client();\n\n    conn.connect(ssh);\n\n    conn.once('error', err => {\n      if (err) {\n        reject(err);\n      }\n    });\n\n    // TODO handle error events\n    conn.once('ready', () => {\n      conn.exec(command, (err, outputStream) => {\n        if (err) {\n          conn.end();\n          reject(err);\n\n          return;\n        }\n\n        let output = '';\n\n        outputStream.on('data', data => {\n          output += data;\n        });\n\n        outputStream.stderr.on('data', data => {\n          output += data;\n        });\n\n        outputStream.once('close', code => {\n          conn.end();\n          resolve({ code, output, host: info.host });\n        });\n      });\n    });\n  });\n}\n\nexport function forwardPort({\n  server,\n  localAddress,\n  localPort,\n  remoteAddress,\n  remotePort,\n  onReady,\n  onError,\n  onConnection = () => {}\n}) {\n  const sshOptions = createSSHOptions(server);\n  const netServer = net.createServer(netConnection => {\n    const sshConnection = new Client();\n    sshConnection.on('ready', () => {\n      sshConnection.forwardOut(\n        localAddress,\n        localPort,\n        remoteAddress,\n        remotePort,\n        (err, sshStream) => {\n          if (err) {\n            return onError(err);\n          }\n          onConnection();\n          netConnection.pipe(sshStream);\n          sshStream.pipe(netConnection);\n        }\n      );\n    }).connect(sshOptions);\n  });\n\n  netServer.listen(localPort, localAddress, error => {\n    if (error) {\n      onError(error);\n    } else {\n      onReady();\n    }\n  });\n}\n\nexport function countOccurences(needle, haystack) {\n  const regex = new RegExp(needle, 'g');\n  const match = haystack.match(regex) || [];\n\n  return match.length;\n}\n\nexport function resolvePath(...paths) {\n  const expandedPaths = paths.map(_path => expandTilde(_path));\n\n  return path.resolve(...expandedPaths);\n}\n\n/**\n * Checks if the module not found by `require` is a certain module\n *\n * @param {Error} e - Error that was thrown\n * @param {String} modulePath - path to the module to compare the error to\n * @returns {Boolean} true if the modulePath and path in the error is the same\n */\nexport function moduleNotFoundIsPath(e, modulePath) {\n  const message = e.message.split('\\n')[0];\n  const pathPosition = message.length - modulePath.length - 1;\n\n  return message.indexOf(modulePath) === pathPosition;\n}\n\nexport function argvContains(argvArray, option) {\n  if (argvArray.indexOf(option) > -1) {\n    return true;\n  }\n\n  return argvArray.find(value => value.indexOf(`${option}=`) > -1);\n}\n\nexport function createOption(key) {\n  if (key.length > 1) {\n    return `--${key}`;\n  }\n\n  return `-${key}`;\n}\n\nexport function filterArgv(argvArray, argv, unwanted) {\n  const result = argv._.slice();\n\n  Object.keys(argv).forEach(key => {\n    const option = createOption(key);\n\n    if (\n      unwanted.indexOf(key) === -1 &&\n      argv[key] !== false &&\n      argv[key] !== undefined\n    ) {\n      if (!argvContains(argvArray, option)) {\n        return;\n      }\n\n      result.push(option);\n\n      if (typeof argv[key] !== 'boolean') {\n        result.push(argv[key]);\n      }\n    }\n  });\n\n  return result;\n}\n"],"file":"utils.js"}